const fs = require('fs');
const path = require('path');
const webpack = require('webpack');

const entry = path.join(__dirname, '../app/editor/webview/quill.ts');
const outputPath = path.join(__dirname, '../app/editor/webview/temp/');
const bundleFilename = 'bundle.js';
const bundleFile = outputPath + bundleFilename;

const destinationFile = path.join(
  __dirname,
  '../app/editor/webview/quill.html',
);

const androidFile = path.join(
  __dirname,
  '../android/app/src/main/assets/quill.html',
);

const compiler = webpack({
  watch: true,
  entry,
  output: {
    path: outputPath,
    filename: bundleFilename,
  },
  module: {
    rules: [
      {
        test: /\.(js|jsx|ts|tsx)$/,
        loader: 'babel-loader',
        options: {
          presets: [
            '@babel/preset-env',
            '@babel/preset-react',
            '@babel/preset-typescript',
          ],
          plugins: ['@babel/plugin-proposal-class-properties'],
        },
      },
      {
        test: /\.css$/i,
        use: ['style-loader', 'css-loader'],
      },
    ],
  },
  resolve: {
    extensions: ['.tsx', '.ts', '.jsx', '.js', '.json'],
  },
});

const watcher = compiler.watch(
  { aggregateTimeout: 300, poll: undefined },
  (err, stats) => {
    console.log('Compiled');

    if (err) {
      console.log(err);
      return;
    }

    if (stats.compilation.errors.length) {
      console.error(stats.compilation.errors);
      process.exit(1);
    }

    const script = fs.readFileSync(bundleFile, {
      encoding: 'utf-8',
    });

    let newHTML = `
<!-- DO NOT EDIT THIS FILE. This file was generated by a script (build_editor_html.js). -->
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0" />
  </head>
  <body>
    <div id="editor-container" spellcheck="false"></div>
    <script>
      ${script}
    </script>
  </body>
</html>
`;

    fs.writeFileSync(destinationFile, newHTML);
    fs.writeFileSync(androidFile, newHTML);
  },
);

// watcher.close(() => {
//   console.log('Watching Ended.');
// });
